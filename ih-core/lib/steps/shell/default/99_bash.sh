#!/bin/bash

# These are some default settings for bash suggested
# by the Developer Platform team. You can override these in the
# bash_custom.sh file.

# DO NOT EDIT THIS FILE
# Changes will be overwritten if you update the ih-core formula

# Only continue if we're on bash
SHELL=$(ps -cp "$$" -o command="")
if [[ ! $SHELL =~ "bash" ]]; then
  return 0
fi

##########################################################
## Grand Rounds Bootstrap Config ##

# show git branch in prompt (with color)

function parse_git_branch() {
  git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

RED="\033[0;31m"
YELLOW="\033[0;33m"
GREEN="\033[0;32m"
NO_COLOR="\033[0m"
LTBLUE="\033[1;34m"

function git_color {
  local git_status
  git_status="$(git status 2>/dev/null)"

  if [[ $git_status =~ "working tree clean" ]]; then
    echo -e "$GREEN"
  elif [[ $git_status =~ "Your branch is ahead of" ]]; then
    echo -e "$YELLOW"
  elif [[ $git_status =~ "nothing added to commit but untracked" ]]; then
    echo -e "$YELLOW"
  elif [[ $git_status =~ "Changes to be committed" ]]; then
    echo -e "$YELLOW"
  elif [[ $git_status =~ "Changes not staged for commit" ]]; then
    echo -e "$RED"
  else
    echo -e "$NO_COLOR"
  fi
}

# Set command prompt to include branch names & Status when in a git folder
PS1="\\[\[$LTBLUE\]\h\[$NO_COLOR\]:\w\[\$(git_color)\]\$(parse_git_branch)\[$NO_COLOR\]\$ "

# Open SSL management
export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"
export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig"
##########################################################

#Make sure home ~/bin is in the path
[[ ! "$PATH" =~ ${HOME}/bin ]] && export PATH="${HOME}/bin:${PATH}"

#Determine where a shell function is defined / declared
function find_function {
  shopt -s extdebug
  declare -F "\$1"
  shopt -u extdebug
}

# Open .bashrc in an editor and then source it when you're done.
alias edit-bashrc="\$EDITOR \$HOME/.bashrc && source \$HOME/.bashrc"
# Open your default bash aliases file in an editor and then source it when you're done.
alias edit-aliases="\$EDITOR \$HOME/.ih.d/custom/bash.sh && source \$HOME/.ih.d/custom/bash.sh"
