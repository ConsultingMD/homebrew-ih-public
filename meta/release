#!/bin/bash

# This script creates and pushes a release
# It takes one parameter: the version number of the release
# The current version number is in ih-core/bin/VERSION
# This command will fail if the repo is dirty, or if the release already exists.
# It will cause a commit with the new version updates

THIS_DIR=$(dirname "$(realpath "$0")")
ROOT_DIR=$(dirname "$THIS_DIR")

function usage() {
  cat <<USAGE
release

Publishes a release. Must be run on the master branch,
unless the '-p' flag is set.

Flags

  -p     Create a pre-release version
USAGE
  exit 1
}

PRERELEASE=""

while getopts "p" arg; do
  case $arg in
    p) PRERELEASE="-p" ;;
    *)
      ih::help
      exit 1
      ;;
  esac
done

BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [[ $BRANCH != "master" && -z $PRERELEASE ]]; then
  usage
fi

if [[ $(git status --short) != '' ]]; then
  echo 'Working directory is dirty, are you missing something?'
  exit 1
fi

VERSION=$(cat "$ROOT_DIR/VERSION")

echo "Creating a release for version $VERSION"

# We want to abort if any of the following commands fail
set -e

git pull

git tag -a "$VERSION" -m "Release version $VERSION"

git push -t

gh release create \
  "$VERSION" \
  $PRERELEASE \
  -t "$VERSION" \
  --notes "Release version $VERSION" \
  --target "$BRANCH" \
  ./bootstrap \
  ./formula/ih-core.rb

set +e
